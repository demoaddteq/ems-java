/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.addteq.struts.action;

import java.util.Vector;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.sql.DataSource;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.addteq.struts.DAO.commissionDAO;
import com.addteq.struts.resource.APPConstant;
import com.addteq.struts.form.CommissionForm;

/** 
 * MyEclipse Struts
 * Creation date: 03-23-2010
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class FindCommissionAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		
		CommissionForm commissionForm=(CommissionForm)form;
		String operation = (String)request.getParameter("operation");
		DataSource myDataSource = getDataSource(request,"corpo");
		commissionDAO myCommissionDAO = new commissionDAO();
		Vector commissionList = new Vector();
		Vector vendorList = new Vector();
		Vector contributorList = new Vector();
		
		String forward = "viewCommissionForm";
		try
		{
			if(operation.equals("show"))
			{
				commissionList = myCommissionDAO.getCommissionList(myDataSource);
				request.setAttribute(APPConstant.COM_LIST,commissionList);
				forward = "showCommissionForm";
			}
			else if(operation.equals("submited"))
			{
				myCommissionDAO.insertCommissionInfo(myDataSource, commissionForm);
				commissionList = myCommissionDAO.getCommissionList(myDataSource);
				request.setAttribute(APPConstant.COM_LIST,commissionList);
				forward = "showCommissionForm";
			}
			else if(operation.equals("add"))
			{
				vendorList = myCommissionDAO.getVendorName(myDataSource);
				request.setAttribute(APPConstant.VEN_LIST, vendorList);
				contributorList = myCommissionDAO.getContributorName(myDataSource);
				request.setAttribute(APPConstant.CONTRIBUT_LIST, contributorList);
				forward = "addCommissionForm";
				
			}
			else if(operation.equals("delete"))
			{
				String custIds= (String)request.getParameter("Cid");
				//String custIdsArr[] = request.getParameterValues("cust_id");
				String custIdsArr[]=custIds.split(",");
				int z=0;
				for(int i =0; i< custIdsArr.length;i++)
				{
					z= Integer.parseInt(custIdsArr[i]);
					myCommissionDAO.deleteCommission(myDataSource,z );
				}
				
				commissionList = myCommissionDAO.getCommissionList(myDataSource);
				request.setAttribute(APPConstant.COM_LIST,commissionList);
				forward = "showCommissionForm";
				
			}
			else if(operation.equals("edit"))
			{
				String custID = (String)request.getParameter("Cid");
				int theID = Integer.parseInt(custID);
				//vendorList = myCommissionDAO.getVendorName(myDataSource);
				//request.setAttribute(APPContant.VEN_LIST, vendorList);
				commissionForm= myCommissionDAO.getCommissionInfo(myDataSource, theID);
				request.setAttribute(APPConstant.COM_INFO, commissionForm);
				forward ="displayEdit";
			}
			else if(operation.equals("update"))
			{
				//myCommissionDAO.getCommissionUpdated(myDataSource,commissionForm);
				
				commissionList = myCommissionDAO.getCommissionList(myDataSource);
				request.setAttribute(APPConstant.COM_LIST,commissionList);
				forward = "showCommissionForm";
				
			}
			else if(operation.equals("addInto"))
			{
				myCommissionDAO.insertCommissionInfo(myDataSource,commissionForm);
				operation = "show";
				
				
				commissionList = myCommissionDAO.getCommissionList(myDataSource);
				request.setAttribute(APPConstant.COM_LIST,commissionList);
				forward = "showCommissionForm";
			}
			
		}
		catch(Exception e)
		{
			
			System.out.println("we got a problem");
		}
		
		
		return mapping.findForward(forward);
	
		
		

	}
	

}