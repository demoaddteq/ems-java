/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.entp.action;


import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.mm.struts.entp.form.ModifyComplaintForm;
import com.mm.core.master.*;

import java.util.*;
/** 
 * MyEclipse Struts
 * Creation date: 07-24-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class ModifyCompaintAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ModifyComplaintForm modifyComplaintForm = new ModifyComplaintForm();// TODO Auto-generated method stub
		HttpSession session = request.getSession();
		EntpMaster entpMaster = new EntpMaster();
		RootMaster rootMaster = new RootMaster();
		String uId =(String)session.getAttribute("uId");
		Vector allRights =(Vector)session.getAttribute("allRights");
		String adminFlag = allRights.elementAt(18).toString();
		String numCopmId = (request.getParameter("numCopmId")!=null) ? request.getParameter("numCopmId").trim() :(String)session.getAttribute("numCopmId");
		String qtp = (request.getParameter("qtp")!=null) ? request.getParameter("qtp").trim() :(String)session.getAttribute("qtp");
		session.setAttribute("qtp", qtp);
		
		if(!numCopmId.equalsIgnoreCase("0"))
    	{
			Vector<String> paramVec2 = new Vector<String>();
    		paramVec2.add(numCopmId);
    		paramVec2.add(uId);
    		paramVec2.add(adminFlag);
    		Vector complaintVec = entpMaster.getComplaintDetails(getDataSource(request, "entp"),paramVec2);
    		IndvMaster indvMaster = new IndvMaster();
    		Vector dataVec = indvMaster.getComplaintUnnamedData(getDataSource(request, "entp"), Integer.parseInt(complaintVec.elementAt(0).toString().trim()));
	    	//System.out.println("complaint details Vector >>>>>>>>>>>"+complaintVec);
	    	/**
	    	 * support.setFieldVec("int", "complaint_id");            	   //0
			support.setFieldVec("string", "complaint_title");              //1
			support.setFieldVec("string", "complaint_text");               //2
			support.setFieldVec("string", "relevent_info");                //3	
			support.setFieldVec("int", "category");                        //4			
			support.setFieldVec("string", "creation_date");                //5
			support.setFieldVec("string", "publish_date");                 //6
			support.setFieldVec("string", "creation_time");  			   //7
			support.setFieldVec("string", "publish_time");  			   //8
			support.setFieldVec("string", "lastmodify_date"); 			   //9
			support.setFieldVec("string", "lastmodify_time"); 			   //10
			support.setFieldVec("int", "login_id"); 					   //11
			support.setFieldVec("int", "companyid"); 					   //12
			support.setFieldVec("string", "timepart");					   //13
			support.setFieldVec("int", "viewcount");                       //14
			support.setFieldVec("int", "entp_id");                         //15
			support.setFieldVec("int", "cu_id");                           //16	
			support.setFieldVec("String", "fcom_id");                      //17
			support.setFieldVec("int", "advt_id");                         //18
			support.setFieldVec("int", "advtL_id");                        //19
			support.setFieldVec("int", "dealer_id");                       //20
			support.setFieldVec("int", "tag_id");                          //21
			support.setFieldVec("String", "resolve_date");                 //22
			support.setFieldVec("String", "closed_date");                  //23
			support.setFieldVec("int", "brandFlag");                       //24
			support.setFieldVec("int", "publish_flag");                    //25
			support.setFieldVec("string", "publish_on");                   //26
			support.setFieldVec("string", "other");                        //27
	    	*/
	    	int advt_id = Integer.parseInt(complaintVec.elementAt(18).toString().trim());
	    	//System.out.println("advt_id, ....."+advt_id);
	    	Vector brandVec = rootMaster.getCompanyDetail(getDataSource(request, "entp"), advt_id);		    	
	    	//System.out.println("brandVec, ....."+brandVec);
	    	int advtl_id =  Integer.parseInt(complaintVec.elementAt(19).toString().trim());
	    	Vector brandUserVec = new Vector();
	    	//Vector brandUserVec = entpMaster.getAllUserList(getDataSource(request, "entp"), advt_id);
	    	////System.out.println("brandUserVec, ....."+brandUserVec);
	    	int login_id = Integer.parseInt(complaintVec.elementAt(11).toString().trim());
	    	//System.out.println("login_id, ....."+login_id);
	    	Vector complainantVec = rootMaster.getUserInfo(getDataSource(request, "entp"), login_id);		    	
	    	//System.out.println("complainantVec, ....."+complainantVec);
	    	//complainant Information
	    	int consCityId = Integer.parseInt(complainantVec.elementAt(6).toString().trim());
	    	String consCityname = rootMaster.getPlaceName(getDataSource(request, "entp"), consCityId);		    	
	    	int consStateId = Integer.parseInt(complainantVec.elementAt(7).toString().trim());
	    	String consStateName = rootMaster.getStateName(getDataSource(request, "entp"), consStateId);		    	
	    	int consCountryId = Integer.parseInt(complainantVec.elementAt(11).toString().trim());
	    	String consCountryname = rootMaster.getCountryName(getDataSource(request, "entp"), consCountryId);
	    	////System.out.println("complainantVec, ...>>>>>>>>>>..");
	    	
	    	
	    	int dealer_id = Integer.parseInt(complaintVec.elementAt(20).toString().trim());
	    	////System.out.println("dealer_id, ....."+dealer_id);
	    	Vector<String> delareVec = new Vector<String>();
	    	
	    	if(dealer_id!= 0){
	    		delareVec = entpMaster.getDealerDetail(getDataSource(request, "entp"), dealer_id);
	    		//delare Information
	    		//System.out.println("delareVec, ...>>>>>>>>>>.."+delareVec);
	    		int dealerCityId = Integer.parseInt(delareVec.elementAt(6).toString().trim());
	    		String dealerCityname = rootMaster.getPlaceName(getDataSource(request, "entp"), dealerCityId);		    	
	    		int dealerStateId = Integer.parseInt(delareVec.elementAt(4).toString().trim());
	    		String dealerStateName = rootMaster.getStateName(getDataSource(request, "entp"), dealerStateId);		    	
	    		int dealerCountryId = Integer.parseInt(delareVec.elementAt(12).toString().trim());
	    		String dealerCountryname = rootMaster.getCountryName(getDataSource(request, "entp"), dealerCountryId);
	    		////System.out.println("delareVec, ...>>>>111111111>>..");
	    		delareVec.add(dealerCityname);//13
	    		delareVec.add(dealerStateName);//14
	    		delareVec.add(dealerCountryname);//15
	    		session.setAttribute("cid", "94~+91");
				session.setAttribute("sid", String.valueOf(dealerStateId));
				session.setAttribute("pid", String.valueOf(dealerCityId));
	    		//System.out.println("delareVec,after ...>>>>>>.."+delareVec);
	    	}
	    	////System.out.println("delareVec, ....."+delareVec);
	    	
	    	int cat_id = Integer.parseInt(complaintVec.elementAt(4).toString().trim());
	    	int tag_id = Integer.parseInt(complaintVec.elementAt(21).toString().trim());
	    	String catName = rootMaster.getStrCategoryName(getDataSource(request, "entp"), cat_id);
	    	////System.out.println("catName, ....."+catName);
	    	String tagName = rootMaster.getStrTagName(getDataSource(request, "entp"), tag_id);	
	    	
	    	Vector<String> extraVec = new Vector<String>();
	    	extraVec.add(catName);
	    	extraVec.add(tagName);
	    	extraVec.add(consCityname);
	    	extraVec.add(consStateName);
	    	extraVec.add(consCountryname);
	    	extraVec.add(qtp);
	    	
	    	if(dealer_id==0)
	    		modifyComplaintForm.setDealerchk("");
	    	else
	    		modifyComplaintForm.setDealerchk("checked");
	    	modifyComplaintForm.setBlogtext(complaintVec.elementAt(2).toString().trim());
	    	modifyComplaintForm.setReleventtext(complaintVec.elementAt(3).toString().trim());
	    	request.setAttribute("entpModifyComplaintForm", modifyComplaintForm);
	    	//set value in form 
	    	request.setAttribute("complaintVec", complaintVec);
	    	request.setAttribute("brandVec", brandVec);
	    	request.setAttribute("brandUserVec", brandUserVec); 
	    	request.setAttribute("complainantVec", complainantVec);
	    	request.setAttribute("delareVec", delareVec);
	    	request.setAttribute("extraVec", extraVec);
	    	int numEnabled = indvMaster.getStrCategoryName(getDataSource(request, "entp"), Integer.parseInt(complaintVec.elementAt(4).toString().trim()));
			String strCatId="0", strOtherCat="NullNone";
			if(numEnabled==0)
			{
				strCatId="-1";
				RootMaster rm = new RootMaster();
				strOtherCat= rm.getStrCategoryName(getDataSource(request, "entp"), Integer.parseInt(complaintVec.elementAt(4).toString().trim()));
			}
			else
			{
				strCatId=complaintVec.elementAt(4).toString().trim();
				//System.out.println("strCatId, ..in else..."+strCatId);
				strOtherCat="NullNone";
			}
			
	    	session.setAttribute("complaintUnnamedData", dataVec);
			session.setAttribute("catid", strCatId);
			session.setAttribute("otherCatid", strOtherCat);
			session.setAttribute("Bid", complaintVec.elementAt(18).toString().trim());
			session.setAttribute("otherBid", (complaintVec.elementAt(27).toString().trim().equalsIgnoreCase("")) ? "NullNone" : complaintVec.elementAt(27).toString().trim());
	    	
    	}
		
		
		return mapping.findForward("success");
	}
}