
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.entp.action;



import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.actions.LookupDispatchAction;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.mm.struts.entp.form.MailComplaintsForm;
import com.mm.core.master.*;
import com.mm.core.resource.Constant;
import com.mm.core.resource.MailText;
import com.mm.core.resource.Resource;

import javax.sql.DataSource;
import java.util.*;


/** 
 * MyEclipse Struts
 * Creation date: 06-19-2007
 * 
 * XDoclet definition:
 * @struts.action path="/mailComplaints" name="MailComplaintsForm" input="/form/mailComplaints.jsp" scope="request" 
 * @struts.action-forward name="success" path="mailComplaints.jsp"
 */
public class MailComplaintsAction extends LookupDispatchAction {
	/*
	 * Generated Methods
	 */
	protected Map getKeyMethodMap()
	{
		Map<String , String> map = new HashMap<String , String> ();
		map.put("mail.submit", "submit");
		map.put("mail.back", "back");
		return map;
	}

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward submit(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) {
		MailComplaintsForm mailComplaintsForm = (MailComplaintsForm) form;// TODO Auto-generated method stub
		String status = "failure";
		
		HttpSession session = request.getSession();
		String pageId = (String)session.getAttribute("pageid");
		String mailids = mailComplaintsForm.getGrpNamesTxtFld();
		String subject = mailComplaintsForm.getSubject();
		String meilText = mailComplaintsForm.getBox();
		String recpName = mailComplaintsForm.getRecpName();
		String fcompId = mailComplaintsForm.getFcopmId();
		String tagId = mailComplaintsForm.getTagId();
		
		session.removeAttribute("tempvec");
		session.removeAttribute("mailVec");
		session.removeAttribute("CopmId");
		session.removeAttribute("fCopmId");
		
		String strMailarr[] = mailids.split(",");
		String recpNamearr[]  = recpName.split(",");
		for(int i=0;i<strMailarr.length;i++)
		{
			MailText mailText = new MailText();
			Resource resr = new Resource();
			String emailId = strMailarr[i];
			String uname = recpNamearr[i];
			String strMailText = mailText.getMailtextReminder(uname,fcompId,tagId);
			
			String strFinalStatus = resr.sendMail(strMailText, Constant.Email_Sender,emailId , subject);
			System.out.println("strFinalStatus>>>>>>>>"+strFinalStatus);
			
			status = "success";
		}
		if(status.equalsIgnoreCase("success"))
		{
			if(Integer.parseInt(pageId)== 7)
			{
				status = "searchsuccess";
			}
			else if(Integer.parseInt(pageId)==1)
			{
				status="success";
			}
			else
			{
				status = "underSuccess";
			}
			ActionErrors errors = new ActionErrors();
			errors.add("mail", new ActionError("errors.mail.success"));
			saveErrors(request, errors);
			
		}
		else
		{
			if(Integer.parseInt(pageId)== 7)
			{
				status = "searchFail";
			}
			else if(Integer.parseInt(pageId)==1)
			{
				status="failure";
			}
			else
			{
				status = "underFail";
			}
			ActionErrors errors = new ActionErrors();
			errors.add("mail", new ActionError("errors.mail.failure"));
			saveErrors(request, errors);
		}
		
	
		return mapping.findForward(status);
	}
	public ActionForward back(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) {
		MailComplaintsForm mailComplaintsForm = (MailComplaintsForm) form;// TODO Auto-generated method stub
		String status = "failure";
		
		HttpSession session = request.getSession();
		String pageId = (String)session.getAttribute("pageid");	
		session.removeAttribute("tempvec");
		session.removeAttribute("mailVec");
		session.removeAttribute("CopmId");
		session.removeAttribute("fCopmId");
		if(Integer.parseInt(pageId)== 7)
		{
			status = "searchFail";
		}
				
		ActionErrors errors = new ActionErrors();
		errors.add("mail", new ActionError("errors.print.finish"));
		saveErrors(request, errors);
		
		return mapping.findForward(status);
	}
}