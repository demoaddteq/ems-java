

/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.entp.action;


import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.mm.struts.entp.form.ModifyComplaintForm;
import com.mm.core.master.*;
import com.mm.core.resource.MailText;
import javax.sql.DataSource;

import java.text.SimpleDateFormat;
import java.util.*;

/** 
 * MyEclipse Struts
 * Creation date: 06-11-2007
 * 
 * XDoclet definition:
 * @struts.action path="/modifyComplaint" name="ModifyComplaintForm" input="/form/modifyComplaint.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="modifyComplaint.jsp"
 */
public class ModifyComplaintAction extends Action {
	/*
	 * Generated Methods
	 */
	EntpMaster objectStr = new EntpMaster();

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) {
		ModifyComplaintForm modifyComplaintForm = (ModifyComplaintForm) form;// TODO Auto-generated method stub
		HttpSession session = request.getSession();
		
		String uId =(String)session.getAttribute("uId");
		String compId =(String)session.getAttribute("compId");
		Vector allRights =(Vector)session.getAttribute("allRights");
		String adminFlag = allRights.elementAt(18).toString();
		
		String status = "failure";
		DataSource dataSource = getDataSource(request,"entp");
		EntpMaster entpMaster = new EntpMaster();
		IndvMaster indvMaster = new IndvMaster();
		
		java.util.Date dt = new java.util.Date();
		SimpleDateFormat sform = new SimpleDateFormat("yyyy-MM-dd, HH:mm:ss");
		String completeRemDate = sform.format(dt);
		StringTokenizer sttotal = new StringTokenizer(completeRemDate, ",");
	    String lastModifyDate = sttotal.nextToken();
	    String lastModifyTime = sttotal.nextToken();
	    
	    String publishDate = "0000-00-00";
	    String publishTime = "00:00:00";
	    String publishFlag = "0";
	    String publishAt = "1@Week";
	    if(modifyComplaintForm.getPublished().equalsIgnoreCase("0@Week"))
	    {
	    	publishDate = lastModifyDate;
	    	publishTime = lastModifyTime;
	    	publishFlag = "1";
		    publishAt = "0@Week";
	    }
	  
	    
		String numCopmId = (String)session.getAttribute("numCopmId");
		String finalCompId = (String)session.getAttribute("finalCopmId");
		String delaerChk =  modifyComplaintForm.getDealerchk();
		String dealerId = "0";
		////System.out.println("dealerId.size "+modifyComplaintForm.getDealerId());
		////System.out.println("dealerId.size "+modifyComplaintForm.getDealerId().toString().length());
		if(modifyComplaintForm.getDealerId().toString().length()>0)
		{
			dealerId=modifyComplaintForm.getDealerId();
		}
		
		String dealerResult = "";
		if(delaerChk.equalsIgnoreCase("checked"))
		{
			if(Integer.parseInt(dealerId)!=0)
			{
				Vector<String> dataVec = new Vector<String>();
				dataVec.add(modifyComplaintForm.getDealername());
				dataVec.add(modifyComplaintForm.getDealeraddress());
				dataVec.add(modifyComplaintForm.getCountry());
				dataVec.add(modifyComplaintForm.getOtherCountry());
				dataVec.add(modifyComplaintForm.getState());
				dataVec.add(modifyComplaintForm.getOtherState());
				dataVec.add(modifyComplaintForm.getCity());
				dataVec.add(modifyComplaintForm.getOtherCity());
				dataVec.add(modifyComplaintForm.getContactPerson());
				String phone ="";
				String mobile = "";
				if(modifyComplaintForm.getMobileNo().length()>0)
				{
					String[] arrContNo = modifyComplaintForm.getMobileNo().split("/");
					if(arrContNo.length ==1)
						phone = arrContNo[0];
					if(arrContNo.length ==2)
					{
						phone = arrContNo[0];
						mobile = arrContNo[1];
						
					}
					
				}
				dataVec.add(phone);
				dataVec.add(mobile);
				dataVec.add(modifyComplaintForm.getEmail());
				dataVec.add(modifyComplaintForm.getPincode());
				dataVec.add(dealerId);
				dealerResult = updateDealerInfo(dataSource,dataVec);
			}
			else
			{
				Vector<String> dataVec = new Vector<String>();
				dataVec.add(modifyComplaintForm.getDealername());
				dataVec.add(modifyComplaintForm.getDealeraddress());
				dataVec.add(modifyComplaintForm.getCountry());
				dataVec.add(modifyComplaintForm.getOtherCountry());
				dataVec.add(modifyComplaintForm.getState());
				dataVec.add(modifyComplaintForm.getOtherState());
				dataVec.add(modifyComplaintForm.getCity());
				dataVec.add(modifyComplaintForm.getOtherCity());
				dataVec.add(modifyComplaintForm.getContactPerson());
				String phone ="";
				String mobile = "";
				if(modifyComplaintForm.getMobileNo().length()>0)
				{
					String[] arrContNo = modifyComplaintForm.getMobileNo().split("/");
					if(arrContNo.length ==1)
						phone = arrContNo[0];
					if(arrContNo.length ==2)
					{
						phone = arrContNo[0];
						mobile = arrContNo[1];
						
					}
					
				}
				dataVec.add(phone);
				dataVec.add(mobile);
				dataVec.add(modifyComplaintForm.getEmail());
				dataVec.add(modifyComplaintForm.getPincode());
				dataVec.add(dealerId);
				dealerId = insertDealerInfo(dataSource,dataVec);
			}
			
		}
		else
		{
			if(Integer.parseInt(dealerId) != 0)
			{
				dealerResult = indvMaster.deleteDealer(dataSource,Integer.parseInt(dealerId));
				if(dealerResult.equals("success"))
				{
					dealerId = "0";
				}
			}
		}
		
		//get advt id and change brand contact person
		String tagId = modifyComplaintForm.getTag();
		String advtl_id = modifyComplaintForm.getAdvtl_id();
		String[] mailIds = modifyComplaintForm.getBemailId();
		String[] brUsName = modifyComplaintForm.getBrUsName();
		String[] brIds = modifyComplaintForm.getBranduserChek();
		/**
		 * Commented by Ajay Kumar Jha.
		 * Contact Person of brands
		 */
		/*String[] fmailIds = new String[brIds.length];
		String[] fbrUsName = new String[brIds.length];
		String[] fbrIds = new String[brIds.length];
		boolean match = false;
		String uname = "";
		for(int i=0;i<brIds.length;i++)
		{
			fbrIds[i] = brIds[i];
			fmailIds[i] = mailIds[i];
			fbrUsName[i] = brUsName[i];
			if(brIds[i].equals(advtl_id))
			{
				match = true;
				uname = brUsName[i];
			}
			////////System.out.println("brIds ["+i+"] = "+brIds[i]);
		}
		if(!match)
		{
			advtl_id = fbrIds[0];
			uname = fbrUsName[0];
		}*/
		/**
		 * Ajay Kumar Jha Here
		 */
		Vector<String> unnamedDataVec = new Vector<String>();
		IndvMaster im = new IndvMaster();
		for(int i=1; i<=35; i++)
		{
			String strSubCatVal = "";
			if(request.getParameterValues("field"+i)!= null)
			{
				String arrTemp[] = request.getParameterValues("field"+i);
				String strTemp="";
				for(int j=0; j<arrTemp.length; j++)
				{
					strTemp=(strTemp.equalsIgnoreCase("")) ? arrTemp[j] : strTemp+", "+arrTemp[j];
					////////System.out.println("Field "+i+" values "+arrTemp[j]);
				}
				unnamedDataVec.add(strTemp);
				
				
				if(strTemp.length()>0)
				{
					char [] chars = strTemp.toCharArray();
					String strFlag="";
					for(int j=0; j<chars.length; j++)
					{
						strFlag +=(Character.isDigit(chars[j])) ? "false" : "true";
					}
					if(strFlag.indexOf("true") <= -1)
					{
						
						if(i==1)
						{
							strSubCatVal = im.getValueSubCat1(getDataSource(request, "entp"), Integer.parseInt(strTemp.trim()));
						}
						if(i==2)
						{
							strSubCatVal = im.getValueSubCat2(getDataSource(request, "entp"), Integer.parseInt(strTemp.trim()));
						}
						if(i==3)
						{
							strSubCatVal = im.getValueSubCat3(getDataSource(request, "entp"), Integer.parseInt(strTemp.trim()));
						}
						if(i==4)
						{
							strSubCatVal = im.getValueSubCat4(getDataSource(request, "entp"), Integer.parseInt(strTemp.trim()));
						}
						if(i==5)
						{
							strSubCatVal = im.getValueSubCat5(getDataSource(request, "entp"), Integer.parseInt(strTemp.trim()));
						}
						if(i==6)
						{
							strSubCatVal = im.getValueSubCat6(getDataSource(request, "entp"), Integer.parseInt(strTemp.trim()));
						}
						if(i==7)
						{
							strSubCatVal = im.getValueSubCat7(getDataSource(request, "entp"), Integer.parseInt(strTemp.trim()));
						}
						if(i==8)
						{
							strSubCatVal = im.getValueSubCat8(getDataSource(request, "entp"), Integer.parseInt(strTemp.trim()));
						}
						if(i==9)
						{
							strSubCatVal = im.getValueSubCat9(getDataSource(request, "entp"), Integer.parseInt(strTemp.trim()));
						}
						if(i==10)
						{
							strSubCatVal = im.getValueSubCat10(getDataSource(request, "entp"), Integer.parseInt(strTemp.trim()));
						}
						////////System.out.println("Str Sub Cat Val "+strSubCatVal);
						if(strSubCatVal.equalsIgnoreCase("failure"))
						{
							strSubCatVal="";
						}
						
					}
					else
					{
						strSubCatVal = "";
					}
				}
				else
				{
					strSubCatVal = "";
				}
				
			}
			else
			{
				unnamedDataVec.add("");
			}
			if(i<11)
			{
				//extraVec.add(strSubCatVal);
			}
		}
		////////System.out.println("unnamedDataVec.size "+unnamedDataVec.size());
		////////System.out.println("unnamedDataVec "+unnamedDataVec);
		
		/**
		 * end here
		 */
		
		Vector<Vector> mailVec = new Vector<Vector>();
		/**
		 * Commented by Ajay Kumar Jha.
		 * Contact Person of brands
		 */
		//for(int i=0;i<fbrIds.length;i++)
		//{
			//Vector<String> tempMailVec = new Vector<String>();
			//tempMailVec.add(fbrIds[i]);
			//tempMailVec.add(fmailIds[i]);
			//tempMailVec.add(fbrUsName[i]);
			//mailVec.add(tempMailVec);
		//}
		
		Vector complaintInfo = entpMaster.getComplaintDetails(getDataSource(request, "entp"), Integer.parseInt(numCopmId));
		String numCompanyId = complaintInfo.elementAt(8).toString();
		//////System.out.println("numCompanyId..........In............... "+numCompanyId);
		
		RootMaster rootMaster = new RootMaster();		
		String strCompnyName = rootMaster.getBrandName(getDataSource(request, "entp"), Integer.parseInt(numCompanyId)) ;
		//////System.out.println("CompnyName..........In............... "+strCompnyName);
		
		Vector strCompnyAdd = rootMaster.getCompanyAdd(getDataSource(request, "entp"), Integer.parseInt(numCompanyId)) ;
		//////System.out.println("strCompnyAdd..........In............... "+strCompnyAdd);
		String addres1 = strCompnyAdd.elementAt(0).toString();
		String addres2 = strCompnyAdd.elementAt(1).toString();
		String strCity = rootMaster.getPlaceName(getDataSource(request, "entp"),Integer.parseInt(strCompnyAdd.elementAt(2).toString()));
		String strState = rootMaster.getStateName(getDataSource(request, "entp"),Integer.parseInt(strCompnyAdd.elementAt(3).toString()));
		String strCountr = rootMaster.getCountryName(getDataSource(request, "entp"),Integer.parseInt(strCompnyAdd.elementAt(4).toString()));
		String strZip = strCompnyAdd.elementAt(5).toString();
		String strPhone = strCompnyAdd.elementAt(6).toString();
		
		
		Vector tempVec = entpMaster.getUserInfoForMail(dataSource, Integer.parseInt(advtl_id.trim()));
		String strBUserName = tempVec.elementAt(2).toString().trim()+" "+tempVec.elementAt(3).toString().trim();
		Vector<String> temVector = new Vector<String>();
		temVector.add(tempVec.elementAt(0).toString().trim());
		temVector.add(tempVec.elementAt(1).toString().trim());
		temVector.add(strBUserName);
		mailVec.add(temVector);
		//////System.out.println("Mail Vector is "+mailVec);
		MailText mailText = new MailText();
		String strReminder = mailText.getMailtextReminder(strBUserName,finalCompId,tagId, strCompnyName, addres1, addres2, strCity, strState, strCountr, strZip, strPhone);
		String strMailText = mailText.getMailtextMail(finalCompId,tagId);
		String strReminderSub = mailText.getMailtextReminderSubject(tagId, finalCompId);
		String strComplaintText = modifyComplaintForm.getBlogtext();
		String strReleventText = modifyComplaintForm.getReleventtext();
		
		
		
		request.setAttribute("mailVec", mailVec);
		request.setAttribute("strReminder", strReminder);
		request.setAttribute("strReminderSub", strReminderSub);
		request.setAttribute("strComplaintText", strComplaintText);
		request.setAttribute("strReleventText", strReleventText);
		request.setAttribute("CopmId", numCopmId);
		request.setAttribute("fCopmId", finalCompId);
		request.setAttribute("tagId", tagId);
		request.setAttribute("strMailText",strMailText);
				
		
		
		String resolvedDate = "0000-00-00";
		String closedDate = "0000-00-00";
		//end brand contact person 
		if(tagId.equals("3"))
		{
			resolvedDate = lastModifyDate;
		}
		else if(tagId.equals("4"))
		{
			closedDate = lastModifyDate;
		}
		
		Vector<String> ComplaintVec = new Vector<String>();
		ComplaintVec.add(modifyComplaintForm.getBlogTitle());
		ComplaintVec.add(modifyComplaintForm.getBlogtext());
		ComplaintVec.add(modifyComplaintForm.getReleventtext());
		ComplaintVec.add(publishDate);
		ComplaintVec.add(publishTime);
		ComplaintVec.add(lastModifyDate);
		ComplaintVec.add(lastModifyTime);
		ComplaintVec.add(advtl_id);
		ComplaintVec.add(dealerId);
		ComplaintVec.add(tagId);
		String Qty="";
		String Bflag="1";
		if(request.getParameter("Qtype").toString()!=null)
		{
			Qty=request.getParameter("Qtype").toString();
			if(Qty.equalsIgnoreCase("blog"))
			{
				Bflag="0";
			}else
			{
				Bflag="1";
			}
		}
		ComplaintVec.add(Bflag);
		ComplaintVec.add(publishFlag);
		ComplaintVec.add(publishAt);
		ComplaintVec.add(resolvedDate);
		ComplaintVec.add(closedDate);
		ComplaintVec.add(numCopmId);
		
		status = entpMaster.updateComplaint(dataSource, ComplaintVec);
		
		status = entpMaster.editComplaintUnnamed(dataSource, unnamedDataVec, Integer.parseInt(numCopmId.trim()));
		//////System.out.println("status in modify complaint action>>>>>>>>>>>>>>>>"+status);	
		
		
		Vector dataVec3 = new Vector();		
		dataVec3.add(uId);
		dataVec3.add(compId);	
		dataVec3.add(adminFlag);
		Vector entpCountVec = entpMaster.complaintCountEntp(getDataSource(request, "entp"), dataVec3);		
		session.setAttribute("entpCountVec", entpCountVec);						
		//////System.out.println("entpCountVec.............ModifyComplaintAction........... "+entpCountVec);
		if(Qty.equalsIgnoreCase("blog"))
		{
			if(status.equalsIgnoreCase("success"))
			{
				status="blogUpdated";
			}else
			{
				status="blogFailure";
			}
			
		}
		////System.out.println("statusstatusstatus>>>>>>>>>"+status);
		return mapping.findForward(status);
		
	}
	public String updateDealerInfo(DataSource dataSource,Vector dataVec)
	{
		String result = "failure";
		
		EntpMaster entpMaster = new EntpMaster();
		Vector<String> dealerVec = new Vector<String>();
		Vector countryVec = getCountryData(dataSource,dataVec);
		
		String countryarr [] = countryVec.elementAt(0).toString().trim().split("~");
		
		dealerVec.add(dataVec.elementAt(0).toString().trim());	//0
		dealerVec.add(dataVec.elementAt(1).toString().trim());	//1								
		dealerVec.add(countryarr[0]);							//2
		dealerVec.add(countryVec.elementAt(1).toString().trim());//3
		dealerVec.add(countryVec.elementAt(2).toString().trim());//4
		dealerVec.add(countryVec.elementAt(2).toString().trim());//5
		
		dealerVec.add(dataVec.elementAt(8).toString().trim());	//6
		dealerVec.add(dataVec.elementAt(9).toString().trim());	//7
		dealerVec.add(dataVec.elementAt(10).toString().trim()); //8
		dealerVec.add(dataVec.elementAt(11).toString().trim()); //9
		dealerVec.add(dataVec.elementAt(12).toString().trim()); //10
		dealerVec.add(dataVec.elementAt(13).toString().trim());	//11
		
		result = entpMaster.updateDealerInfo(dataSource,dealerVec);
		return result;
	}
	public String insertDealerInfo(DataSource dataSource,Vector dataVec)
	{
		String strResult = "0";
		
		EntpMaster entpMaster = new EntpMaster();
		IndvMaster indvMaster = new IndvMaster();
		Vector<String> dealerVec = new Vector<String>();
		Vector countryVec = getCountryData(dataSource,dataVec);
		
		String countryarr [] = countryVec.elementAt(0).toString().trim().split("~");
		
		dealerVec.add(dataVec.elementAt(0).toString().trim());	//0
		dealerVec.add(dataVec.elementAt(1).toString().trim());	//1								
		dealerVec.add(countryarr[0]);							//2
		dealerVec.add(countryVec.elementAt(1).toString().trim());//3
		dealerVec.add(countryVec.elementAt(2).toString().trim());//4
		dealerVec.add(countryVec.elementAt(2).toString().trim());//5
		
		dealerVec.add(dataVec.elementAt(8).toString().trim());	//6
		dealerVec.add(dataVec.elementAt(9).toString().trim());	//7
		dealerVec.add(dataVec.elementAt(10).toString().trim()); //8
		dealerVec.add(dataVec.elementAt(11).toString().trim()); //9
		dealerVec.add(dataVec.elementAt(12).toString().trim()); //10
		
		
		String result = entpMaster.insertDealerInfo(dataSource,dealerVec);
		if(result.equalsIgnoreCase("success"))
		{
			strResult = indvMaster.getMaxDealerId(dataSource, dataVec.elementAt(0).toString().trim());
		}
		return strResult;
	}
	public Vector getCountryData(DataSource dataSource,Vector dataVec)
	{
		Vector<String> resultVec = new Vector<String>();
		String userCountry=dataVec.elementAt(2).toString();
		String userState=dataVec.elementAt(4).toString();
		String userCity=dataVec.elementAt(6).toString();
		RootMaster rootMaster = new RootMaster();
		
			if(userCountry.equals("-1"))
			{
				//SET COUNTRY ,STATE ,CITY IN DATA BASE AND GENERATE ID FOR THAT AND ADD THESE IDS IN COMPANY MASTER TABLE.
				userCountry=rootMaster.insertCountry(dataSource,"+0",dataVec.elementAt(3).toString());//return country id
				userState=rootMaster.insertState(dataSource,dataVec.elementAt(5).toString(),userCountry);
				userCity=rootMaster.insertCity(dataSource,dataVec.elementAt(7).toString(),userState,userCountry);
			}
			else if(userState.equals("-1"))
			{
				//set state .city in data base and add these field in company master table
				userState=rootMaster.insertState(dataSource,dataVec.elementAt(5).toString(),userCountry);
				userCity=rootMaster.insertCity(dataSource,dataVec.elementAt(7).toString(),userState,userCountry);
			}
			else if(userCity.equals("-1"))
			{
				//set sity in data base and add that is in company master.
				userCity=rootMaster.insertCity(dataSource,dataVec.elementAt(7).toString(),userState,userCountry);
			}
			else
			{
				//nothing 
			}
		
		resultVec.add(userCountry);
		resultVec.add(userState);
		resultVec.add(userCity);
		
		
		
		
		return resultVec;
	}
}
