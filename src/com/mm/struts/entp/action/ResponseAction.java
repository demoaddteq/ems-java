
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.entp.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.mm.struts.entp.form.ResponseForm;
import com.mm.core.master.*;
import com.mm.core.resource.Constant;
import com.mm.core.resource.MailText;
import com.mm.core.resource.Resource;

import java.text.SimpleDateFormat;
import java.util.StringTokenizer;
import java.util.Vector;


/** 
 * MyEclipse Struts
 * Creation date: 06-19-2007
 * 
 * XDoclet definition:
 * @struts.action path="/changepass" name="ChangepassForm" input="/form/Changepass.jsp" scope="request" 
 * @struts.action-forward name="success" path="changepass.jsp"
 */
public class ResponseAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) {
		ResponseForm responseForm = (ResponseForm) form;// TODO Auto-generated method stub
		
		//System.out.println("ResponseAction.............mail");
		
		RootMaster rootMaster = new RootMaster();
		Vector<String> dataVec = new Vector<String>();
		String responseTextt = responseForm.getResponsetext();
		String respId = request.getParameter("respid");
		String complaintId = request.getParameter("compId");
		String recpType = (request.getParameter("respType")!=null) ? request.getParameter("respType") : "";
		String flag = "";
		if(request.getParameter("flag")!= null)
		{
			flag = request.getParameter("flag").trim();
		}
		else
		{
			if(recpType.equalsIgnoreCase("Consumer"))
			{
				flag = "2";
			}
			else
			{
				flag = "3";
			}
		}
		HttpSession session = request.getSession();
		String uid = (String)session.getAttribute("uId");
		java.util.Date dt = new java.util.Date();
		SimpleDateFormat sform = new SimpleDateFormat("yyyy-MM-dd, HH:mm:ss");
		String completeRemDate = sform.format(dt);
		StringTokenizer sttotal = new StringTokenizer(completeRemDate, ",");
	    String creationDate = sttotal.nextToken();
	    String creationTime = sttotal.nextToken();
	    
		dataVec.add(responseTextt);
		dataVec.add(creationDate);
		dataVec.add(complaintId);
		dataVec.add(uid);
		dataVec.add(creationTime);
		dataVec.add(respId);
		dataVec.add(flag);
		dataVec.add("0");
		dataVec.add("0");
		dataVec.add("1");
				
		String result = rootMaster.insertResponse(getDataSource(request,"entp"),dataVec);
		
		if((result.equalsIgnoreCase("success"))&&(!respId.equalsIgnoreCase("0"))){
			ActionErrors errors = new ActionErrors();
           	errors.clear();
          	errors.add("reply", new ActionError("errors.entp.replySuccess"));
			saveErrors(request, errors);
			result = "success";
		}else if (result.equalsIgnoreCase("success")){
			ActionErrors errors = new ActionErrors();
           	errors.clear();
          	errors.add("response", new ActionError("errors.entp.responseSuccess"));
			saveErrors(request, errors);
			result = "success";
		}
		
		if(result.equalsIgnoreCase("success"))
		{
			if(!respId.equalsIgnoreCase("0"))
			{
				Vector<String> respVec = new Vector<String>();
				respVec.add(respId);
				respVec.add("entp");
				//update `entp_rflag` for communication table.
				result = rootMaster.updateResponseFlag(getDataSource(request,"entp"), respVec);				
				
			}
		}
		
		///////// for mail ///////////
		if(result.equalsIgnoreCase("success"))
		{
			
			EntpMaster entpMaster = new EntpMaster();
			IndvMaster indvMaster = new IndvMaster();
			Vector<String> complaintVec = new Vector<String>();
			int cid = Integer.parseInt(complaintId);
			complaintVec = entpMaster.getComplaintDetails(getDataSource(request,"entp"), cid);
			String login_id = complaintVec.elementAt(3).toString();
			String advtL_id = complaintVec.elementAt(9).toString();
			String fcomId = complaintVec.elementAt(7).toString();
			
			Vector<String> paramVec = new Vector<String>();
			
			
			
			if(request.getParameter("flag")!= null)
			{
				
				
				//System.out.println("to Public.....f........mail");
				paramVec.add(uid);
				paramVec.add(login_id);
				paramVec.add(advtL_id);
				Vector emailVec = indvMaster.getEmailList(getDataSource(request,"entp"), paramVec);
				Vector<String> tempMailParam = new Vector<String>();
				tempMailParam.add("Enterprise");//sender company type Enterprise
				tempMailParam.add("Public");//receipient company type Advertiser
				tempMailParam.add("Reply to your mail");//mail description
				//get mail text alert fot sending mail to core user and admin core user
				String mailTextLAlert = rootMaster.getMailText(getDataSource(request,"entp"), tempMailParam);
				Vector coreVec = (Vector)emailVec.elementAt(0);
				String coreName =coreVec.elementAt(0).toString()+" "+coreVec.elementAt(1).toString();
				String coremail = coreVec.elementAt(2).toString().trim();
				String subject = "Reply to your mail on Complaint Id ("+ fcomId + ") By Core Centre.";
				for(int i=1; i<emailVec.size();i++)
				{
					MailText mt = new MailText();
					Resource resr = new Resource();
					Vector coreMailVec = (Vector)emailVec.elementAt(i);
					String strMailText = mt.getReplyByCore(coreMailVec,fcomId,mailTextLAlert,coreName);
					
					String strEmailStatus = resr.sendMail(strMailText, Constant.Email_Sender,((Vector)emailVec.elementAt(i)).elementAt(2).toString() , subject);
					//System.out.println("str Email status fo core"+strEmailStatus);
				}
				
				
			}
			else
			{
				if(recpType.equalsIgnoreCase("Consumer"))
				{
					//System.out.println("to Consumer.............mail");
					paramVec.add(uid);
					paramVec.add(login_id);
					Vector emailVec = indvMaster.getEmailList(getDataSource(request,"entp"), paramVec);
					Vector<String> tempMailParam = new Vector<String>();
					tempMailParam.add("Enterprise");//sender company type Enterprise
					tempMailParam.add("Consumer");//receipient company type Consumer
					tempMailParam.add("Reply to your mail");//mail description
					//get mail text alert fot sending mail to core user and admin core user
					String mailTextLAlert = rootMaster.getMailText(getDataSource(request,"entp"), tempMailParam);
					Vector coreVec = (Vector)emailVec.elementAt(0);
					String coreName =coreVec.elementAt(0).toString()+" "+coreVec.elementAt(1).toString();
					String coremail = coreVec.elementAt(2).toString().trim();
					String subject = "Reply to your mail on Complaint Id ("+ fcomId + ") By Core Centre.";
					for(int i=1; i<emailVec.size();i++)
					{
						MailText mt = new MailText();
						Resource resr = new Resource();
						Vector coreMailVec = (Vector)emailVec.elementAt(i);
						String strMailText = mt.getReplyByCore(coreMailVec,fcomId,mailTextLAlert,coreName);
						
						String strEmailStatus = resr.sendMail(strMailText, Constant.Email_Sender,((Vector)emailVec.elementAt(i)).elementAt(2).toString() , subject);
						//System.out.println("str Email status fo core"+strEmailStatus);
					}
				}
				else
				{
					//System.out.println("to Advertiser.............mail");
					paramVec.add(uid);
					paramVec.add(advtL_id);
					Vector emailVec = indvMaster.getEmailList(getDataSource(request,"entp"), paramVec);
					Vector<String> tempMailParam = new Vector<String>();
					tempMailParam.add("Enterprise");//sender company type Enterprise
					tempMailParam.add("Advertiser");//receipient company type Advertiser
					tempMailParam.add("Reply to your mail");//mail description
					//get mail text alert fot sending mail to core user and admin core user
					String mailTextLAlert = rootMaster.getMailText(getDataSource(request,"entp"), tempMailParam);
					Vector coreVec = (Vector)emailVec.elementAt(0);
					String coreName =coreVec.elementAt(0).toString()+" "+coreVec.elementAt(1).toString();
					String coremail = coreVec.elementAt(2).toString().trim();
					String subject = "Reply to your mail on Query Id ("+ fcomId + ") By CampusYogi Centre.";
					for(int i=1; i<emailVec.size();i++)
					{
						MailText mt = new MailText();
						Resource resr = new Resource();
						Vector coreMailVec = (Vector)emailVec.elementAt(i);
						String strMailText = mt.getReplyByCore(coreMailVec,fcomId,mailTextLAlert,coreName);
						
						String strEmailStatus = resr.sendMail(strMailText, Constant.Email_Sender,((Vector)emailVec.elementAt(i)).elementAt(2).toString() , subject);
						//System.out.println("str Email status fo core"+strEmailStatus);
					}
				}
			}
			
				
			
		
		}
		
		///////// end for mail ///////////
		
		
		session.setAttribute("numCid", complaintId);	
		session.setAttribute("strResult", result);
		return mapping.findForward(result);
	}
}