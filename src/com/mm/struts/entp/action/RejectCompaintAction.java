/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.entp.action;

import java.text.SimpleDateFormat;
import java.util.StringTokenizer;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.sql.DataSource;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import java.util.Vector;

import com.mm.core.master.EntpMaster;

/** 
 * MyEclipse Struts
 * Creation date: 08-10-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class RejectCompaintAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession();
		String uId =(String)session.getAttribute("uId");
		String compId =(String)session.getAttribute("compId");
		Vector allRights =(Vector)session.getAttribute("allRights");
		String adminFlag = allRights.elementAt(18).toString();
		
		EntpMaster entpMaster = new EntpMaster();
		DataSource dataSource = getDataSource(request,"entp");
		String status = "failure";
		
		String numCopmId = (request.getParameter("numCopmId")!=null) ? request.getParameter("numCopmId").trim() :(String)session.getAttribute("numCopmId");
		
		java.util.Date dt = new java.util.Date();
		SimpleDateFormat sform = new SimpleDateFormat("yyyy-MM-dd, HH:mm:ss");
		String completeRemDate = sform.format(dt);
		StringTokenizer sttotal = new StringTokenizer(completeRemDate, ",");
	    String lastModifyDate = sttotal.nextToken();
	    String lastModifyTime = sttotal.nextToken();
	    
	    Vector<String> dataVec =  new Vector<String>();
	    dataVec.add(numCopmId);
	    dataVec.add(lastModifyDate);
	    dataVec.add(lastModifyTime);
	    
	    
	    status = entpMaster.rejectComplaint(dataSource,dataVec);
	    ActionErrors errors = new ActionErrors();
		errors.clear();
	    if(status.equals("success"))
	    {
	    	errors.add("reject", new ActionError("errors.reject.success"));
	   }
	    else
	    {
	    	errors.add("reject", new ActionError("errors.reject.failure"));
			
	    }
	    saveErrors(request, errors);
	    
	    Vector dataVec3 = new Vector();		
		dataVec3.add(uId);
		dataVec3.add(compId);	
		dataVec3.add(adminFlag);
		Vector entpCountVec = entpMaster.complaintCountEntp(getDataSource(request, "entp"), dataVec3);		
		session.setAttribute("entpCountVec", entpCountVec);						
		//System.out.println("entpCountVec.............RejectCompaintAction........... "+entpCountVec);
	    
		return mapping.findForward(status);
	}
}