/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.corpo.action;

import java.io.IOException;
import java.rmi.ServerException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.mm.core.master.EntpMaster;
import com.mm.struts.corpo.form.ManipulatesubcatForm;

/** 
 * MyEclipse Struts
 * Creation date: 07-18-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="error" path="/manipulatesubcat.jsp"
 * @struts.action-forward name="success" path="/subcategory.jsp"
 * @struts.action-forward name="failure" path="/manipulatesubcat.jsp"
 */
public class ManipulatesubcatAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException, ServerException 
	{
		String target = new String("failure");
		try
		{
			ManipulatesubcatForm mscf = (ManipulatesubcatForm)form;
			EntpMaster am = new EntpMaster();
			HttpSession session = request.getSession();
//			Page Id
			String strPageId = (session.getAttribute("pgid")!=null) ? session.getAttribute("pgid").toString().trim() : "";
	//		Company Id
			String strCompId = (session.getAttribute("compId") !=null) ? session.getAttribute("compId").toString().trim(): "0";
	//		Category Id
			String strCatId = mscf.getCatid(); 
			session.setAttribute("catid", strCatId);
			String strRespPage = mscf.getResppage();
			session.setAttribute("pgResp", strRespPage);
			//////System.out.println("Resp Page >> "+strRespPage);
			//////System.out.println("Manipulate Sub Cat has Comapny Id "+strCompId);
			//////System.out.println("Manipulate Sub Cat has strPage Id "+strPageId);
			String strCmdVal = mscf.getCmdval();
			//////System.out.println("Cmd Value "+strCmdVal);
			if(strCmdVal.equalsIgnoreCase("Add New"))
			{
				target = am.setSubCategory(mscf, getDataSource(request, "corpo"), Integer.parseInt(strCompId.trim()));
			}
			else if(strCmdVal.equalsIgnoreCase("Modify"))
			{
				target = am.editSubCategory(mscf, getDataSource(request, "corpo"), Integer.parseInt(strCompId.trim()));
			}
			else if(strCmdVal.equalsIgnoreCase("Delete"))
			{
				target = am.deleteSubCategory(mscf, getDataSource(request, "corpo"), Integer.parseInt(strCompId.trim()));
			}
			else
			{
				target = "failure";
			}
			////System.out.println("Manipulate Sub Cat has target "+target);
		}
		catch ( Exception e ) 
		{
			e.printStackTrace();
			System.err.println("Setting target to error");
			target = new String("error");
			ActionErrors errors = new ActionErrors();
			errors.add(ActionErrors.GLOBAL_ERROR, new ActionError("errors.database.error", e.getMessage()));
// 		 	Report any errors
		    if ( !errors.isEmpty() ) 
		    {
		    	saveErrors(request, errors);
		    }
		}
		return (mapping.findForward(target));
		
	}
}