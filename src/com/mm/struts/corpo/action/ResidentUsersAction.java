/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.corpo.action;

import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.LookupDispatchAction;

import com.mm.core.master.AdvtMaster;
import com.mm.struts.corpo.form.CorpoUsersForm;

/** 
 * MyEclipse Struts
 * Creation date: 09-20-2009
 * 
 * XDoclet definition:
 * @struts.action path="/residentUsers" name="corpoUsersForm" input="/create_member.jsp" scope="request" validate="true"
 */
public class ResidentUsersAction extends LookupDispatchAction {
	/*
	 * Generated Methods
	 */
	protected Map getKeyMethodMap()
	{
		
		Map<String , String> map = new HashMap<String , String> ();
		map.put("resident.delete", "delete");
		map.put("resident.suspend", "suspend");
		map.put("resident.validate","validate");
		map.put("resident.print","print");
		map.put("resident.usrimport","usrImport");
		return map;
	}
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward delete(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		String strTarget = "failure";
		ActionErrors errors = new ActionErrors();
		try
		{
			CorpoUsersForm cuf = (CorpoUsersForm) form;
			String strUserIds = (cuf.getUserIds()!=null) ? cuf.getUserIds() : "";
			if(strUserIds.length()>0)
			{
				System.out.println("Delete Arun "+strUserIds);
				AdvtMaster advtMaster = new AdvtMaster();
				
				strTarget = advtMaster.setDeleteStatus(getDataSource(request,"corpo"), strUserIds, 1);
				if(strTarget.equalsIgnoreCase("success"))
				{
					errors.add("CorpoUsersForm", new ActionError("errors.resident.DeleteSuccess"));
				}
				else
				{
					errors.add("CorpoUsersForm", new ActionError("errors.resident.DeleteFail"));
				}
			}
			else
			{
				errors.add("CorpoUsersForm", new ActionError("errors.resident.SelectUser"));
			}
			if(!errors.isEmpty())
			{
				saveErrors(request, errors);
			}
		}
		catch(Exception e)
		{
			
		}
		return mapping.findForward(strTarget);
	}
	
	public ActionForward suspend(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		String strTarget = "failure";
		ActionErrors errors = new ActionErrors();
		try
		{
			CorpoUsersForm cuf = (CorpoUsersForm) form;
			String strUserIds = (cuf.getUserIds()!=null) ? cuf.getUserIds() : "";
			if(strUserIds.length()>0)
			{
				System.out.println("Suspend Arun "+strUserIds);
				AdvtMaster advtMaster = new AdvtMaster();
				
				strTarget = advtMaster.setSuspendStatus(getDataSource(request,"corpo"), strUserIds, 1);
				if(strTarget.equalsIgnoreCase("success"))
				{
					errors.add("CorpoUsersForm", new ActionError("errors.resident.SuspendSuccess"));
				}
				else
				{
					errors.add("CorpoUsersForm", new ActionError("errors.resident.SuspendFail"));
				}
			}
			else
			{
				errors.add("CorpoUsersForm", new ActionError("errors.resident.SelectUser"));
			}
			if(!errors.isEmpty())
			{
				saveErrors(request, errors);
			}
		}
		catch(Exception e)
		{
			
		}
		return mapping.findForward(strTarget);
	}
	
	public ActionForward validate(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		String strTarget = "failure";
		ActionErrors errors = new ActionErrors();
		try
		{
			CorpoUsersForm cuf = (CorpoUsersForm) form;
			String strUserIds = (cuf.getUserIds()!=null) ? cuf.getUserIds() : "";
			if(strUserIds.length()>0)
			{
				System.out.println("Validate Arun "+strUserIds);
				AdvtMaster advtMaster = new AdvtMaster();
				
				strTarget = advtMaster.setValidStatus(getDataSource(request,"corpo"), strUserIds, 1);
				if(strTarget.equalsIgnoreCase("success"))
				{
					errors.add("CorpoUsersForm", new ActionError("errors.resident.ValidateSuccess"));
				}
				else
				{
					errors.add("CorpoUsersForm", new ActionError("errors.resident.ValidateFail"));
				}
			}
			else
			{
				errors.add("CorpoUsersForm", new ActionError("errors.resident.SelectUser"));
			}
			if(!errors.isEmpty())
			{
				saveErrors(request, errors);
			}
		}
		catch(Exception e)
		{
			
		}
		return mapping.findForward(strTarget);
	}
	public ActionForward print(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		String strTarget = "failure";
		ActionErrors errors = new ActionErrors();
		try
		{
			CorpoUsersForm cuf = (CorpoUsersForm) form;
			String strUserIds = (cuf.getUserIds()!=null) ? cuf.getUserIds() : "";
			if(strUserIds.length()>0)
			{
				System.out.println("Print Arun "+strUserIds);
				strTarget = "success";
			}
			else
			{
				errors.add("CorpoUsersForm", new ActionError("errors.resident.SelectUser"));
			}
		}
		catch(Exception e)
		{
			
		}
		return mapping.findForward(strTarget);
	}
	public ActionForward usrImport(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		String strTarget = "failure";
		ActionErrors errors = new ActionErrors();
		try
		{
			CorpoUsersForm cuf = (CorpoUsersForm) form;
			String strUserIds = (cuf.getUserIds()!=null) ? cuf.getUserIds() : "";
			if(strUserIds.length()>0)
			{
				System.out.println("User Import Arun "+strUserIds);
				strTarget = "success";
			}
			else
			{
				errors.add("CorpoUsersForm", new ActionError("errors.resident.SelectUser"));
			}
		}
		catch(Exception e)
		{
			
		}
		return mapping.findForward(strTarget);
	}
}