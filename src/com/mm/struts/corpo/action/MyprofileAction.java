
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */package com.mm.struts.corpo.action;
 import javax.servlet.http.HttpServletRequest;
 import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

 import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
 import org.apache.struts.action.ActionForm;
 import org.apache.struts.action.ActionForward;
 import org.apache.struts.action.ActionMapping;
 import com.mm.struts.corpo.form.MyprofileForm;
 import java.util.Vector;
 import com.mm.core.master.*;

import javax.sql.DataSource;



/** 
 * MyEclipse Struts
 * Creation date: 07-20-2007
 * 
 * XDoclet definition:
 * @struts.action path="/Myprofile" name="MyprofileForm" input="/Myprofile.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/Myprofile.jsp"
 * @struts.action-forward name="failure" path="/Myprofile.jsp"
 */


public class MyprofileAction extends Action{
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) {
		MyprofileForm myprofileForm = (MyprofileForm) form;// TODO Auto-generated method stub
		
		HttpSession session = request.getSession();
		String compId =(String)session.getAttribute("compId");
		
		
		
		Vector <String> datavec = new Vector<String>();
		EntpMaster entpMaster = new EntpMaster();
		RootMaster rootMaster = new RootMaster();
		AdvtMaster advtMaster = new AdvtMaster();
		DataSource ds = getDataSource(request,"corpo");
		
		
		///////////////////////
		 String tempCountry[] = myprofileForm.getCountry().split("~");
			String comCountry=tempCountry[0];
			String comState = myprofileForm.getState();
			String comCity = myprofileForm.getCity();
			if(comCountry.equals("-1"))
			{
				//SET COUNTRY ,STATE ,CITY IN DATA BASE AND GENERATE ID FOR THAT AND ADD THESE IDS IN COMPANY MASTER TABLE.
				comCountry=rootMaster.insertCountry(ds,myprofileForm.getTxtCPPrefix(),myprofileForm.getOthercountry().toString().trim());//return country id
				comState=rootMaster.insertState(ds,myprofileForm.getOtherstate().toString().trim(),comCountry);
				comCity=rootMaster.insertCity(ds,myprofileForm.getOthercity().toString().trim(),comState,comCountry);
			}
			else if(comState.equals("-1"))
			{
				//set state .city in data base and add these field in company master table
				comState=rootMaster.insertState(ds,myprofileForm.getOtherstate().toString().trim(),comCountry);
				comCity=rootMaster.insertCity(ds,myprofileForm.getOthercity().toString().trim(),comState,comCountry);
			}
			else if(comCity.equals("-1"))
			{
				//set sity in data base and add that is in company master.
				comCity=rootMaster.insertCity(ds,myprofileForm.getOthercity().toString().trim(),comState,comCountry);
			}
			else
			{
				//nothing 
			}
			////////////
			String phoneNo="";
			if(myprofileForm.getCphone().trim().length()>0)
			{
				String Prefix = myprofileForm.getTxtCPPrefix().trim();
				String areaCode = myprofileForm.getTxtCACPrefix().trim();
				String mobile = myprofileForm.getCphone().trim();
				phoneNo = Prefix+"~"+areaCode+"~"+mobile ;
			}
		/////////////////////////
		datavec.add(compId);		
		datavec.add(myprofileForm.getCompanyName().toString().trim());		
		datavec.add(myprofileForm.getCompanyAddress1().toString().trim());		
		datavec.add(myprofileForm.getCompanyAddress2().toString().trim());	
		datavec.add(comCity);	
		datavec.add(comState);	
		datavec.add(comCountry);	
		datavec.add(myprofileForm.getCompanyPostalCode().toString().trim());
		datavec.add(myprofileForm.getCompanyEMail().toString().trim());		
		
		datavec.add(phoneNo);
	
		
		////////System.out.println("datavec....MyProfileAction......."+datavec);
		
		String  teampMcat = "";
		  if(myprofileForm.getMcata().equalsIgnoreCase("1")){
		  teampMcat = teampMcat+1+",";
		  }
		  else {
			  teampMcat = teampMcat+"0,";
		  }
		  if(myprofileForm.getMcatb().equalsIgnoreCase("1")){
		  teampMcat = teampMcat+2+",";
		  }
		  else {
			  teampMcat = teampMcat+"0,";
		  }
		  if(myprofileForm.getMcatc().equalsIgnoreCase("1")){
		  teampMcat = teampMcat+3+",";
		  }
		  else {
			  teampMcat = teampMcat+"0,";
		  }
		  if(myprofileForm.getMcatd().equalsIgnoreCase("1")){
		  teampMcat = teampMcat+4+",";
		  }
		  else {
			  teampMcat = teampMcat+"0,";
		  }
		  
		  teampMcat = teampMcat+"0";
		  ////////System.out.println("teampMcat................."+teampMcat);
		  
		datavec.add(teampMcat);
		////System.out.println("myprofileForm.getShortPro().toString().trim()...updateMentoringCat.............."+myprofileForm.getShortPro().toString().trim());
		datavec.add(myprofileForm.getShortPro().toString().trim());		
		
		String result = entpMaster.updateCompanyData(ds, datavec);
		
		//String uId =(String)session.getAttribute("uId");
		//Vector <String> datavec1 = new Vector<String>();
		//datavec1.add(uId);
		//datavec1.add(teampMcat);
		
		//String result1 = entpMaster.updateMentoringCat(ds, datavec1);
		
		Vector <String> datavec2 = new Vector<String>();
		
		datavec2.add(compId);
		
		Vector userVec = advtMaster.getAllUsersList(getDataSource(request, "corpo"), datavec2);
		
		//System.out.println("userVec.All user of this compamy.........."+userVec);		
		
		for(int i =0; i< userVec.size(); i++){
			
			Vector <String> teampVec = new Vector<String>();
			
			teampVec = (Vector)userVec.elementAt(i);
			String userId = teampVec.elementAt(0).toString();
			String compyId = teampVec.elementAt(1).toString();
			String mentorCat[] = teampVec.elementAt(2).toString().split(",");
			String newMeanoringCat = "";
			
			if(myprofileForm.getMcata().equalsIgnoreCase("1")){
				newMeanoringCat = newMeanoringCat+mentorCat[0]+",";
				  }
				  else {
					  newMeanoringCat = newMeanoringCat+"0,";
				  }
				  if(myprofileForm.getMcatb().equalsIgnoreCase("1")){
					  newMeanoringCat = newMeanoringCat+mentorCat[1]+",";
				  }
				  else {
					  newMeanoringCat = newMeanoringCat+"0,";
				  }
				  if(myprofileForm.getMcatc().equalsIgnoreCase("1")){
					  newMeanoringCat = newMeanoringCat+mentorCat[2]+",";
				  }
				  else {
					  newMeanoringCat = newMeanoringCat+"0,";
				  }
				  if(myprofileForm.getMcatd().equalsIgnoreCase("1")){
					  newMeanoringCat = newMeanoringCat+mentorCat[3]+",";
				  }
				  else {
					  newMeanoringCat = newMeanoringCat+"0,";
				  }
				  
				  newMeanoringCat = newMeanoringCat+"0";
				  
				  //System.out.println("newMeanoringCat........."+newMeanoringCat);		
				  
				  Vector <String> newdataVec = new Vector<String>();
				  newdataVec.add(userId);
				  newdataVec.add(newMeanoringCat);
					
					String result2= entpMaster.updateMentoringCat(ds, newdataVec);
			
		}
		
		
		
		if(result.equalsIgnoreCase("success")){
			ActionErrors errors = new ActionErrors();
           	errors.clear();
          	errors.add("compmodify", new ActionError("errors.entp.compmodifySuccess"));
			saveErrors(request, errors);
			result = "success";
		}
		
		////////System.out.println("datavec....MyProfileAction......."+result);
		
		if(result.equalsIgnoreCase("success")){
			return mapping.findForward("success");
		}
		else{
			return mapping.findForward("failuer");
		}
	}

}
