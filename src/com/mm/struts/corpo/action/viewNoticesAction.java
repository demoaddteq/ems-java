/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.corpo.action;

import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.StringTokenizer;
import java.util.Vector;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.mm.core.master.*;

/** 
 * MyEclipse Struts
 * Creation date: 07-03-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class viewNoticesAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response)throws Exception 
	{
		HttpSession session =request.getSession();
	//	System.out.println("checkpoint13");
		String numCount = (String)session.getAttribute("numCount");
	
		int count = Integer.parseInt(numCount);
		int remander = count%2;
		System.out.println("checkpoint at corpo 2");	
		AdvtMaster advtMaster = new AdvtMaster();
		RootMaster rootMaster = new RootMaster();
		
		String uId =(String)session.getAttribute("uId");
		String FacilityID =(String)session.getAttribute("fId");
		
		System.out.println("compId..in Action avdt ........."+FacilityID);
	//	int regFlag= rootMaster.getRegisteredFlag(getDataSource(request, "corpo"), compId);
	//	System.out.println("regFlag..in Action avdt ........."+regFlag);
		
		Vector allRights =(Vector)session.getAttribute("allRights");
		String adminFlag = allRights.elementAt(18).toString();
		
		String pageid = (request.getParameter("pageid")!=null)? request.getParameter("pageid").trim() : "1";
		String aType = (request.getParameter("aType")!=null)? request.getParameter("aType").trim() : "0";
		String lowerSubTag = (request.getParameter("lowerSubTag")!=null)? request.getParameter("lowerSubTag").trim() : "1";
		
	//	System.out.println("lowerSubTag..in Action avdt ........."+lowerSubTag);
		
		
		java.util.Date dt = new java.util.Date();
		SimpleDateFormat sform = new SimpleDateFormat("yyyy-MM-dd");
		String completeRemDate = sform.format(dt);
		StringTokenizer sttotal = new StringTokenizer(completeRemDate, ",");
	    String creationDate = sttotal.nextToken();
	    String dateToday[] = creationDate.split("-");
	    String YR =dateToday[0];	
	    String DaY = dateToday[2];
	    String MTH =dateToday[1];

		String month= (request.getParameter("Month") != null) ? request.getParameter("Month") : MTH;
		String nYear= (request.getParameter("Year") != null) ? request.getParameter("Year") : YR;	
		
		System.out.println("Month and Year are "+month+" "+nYear);

		String strShortBy = (request.getParameter("sby")!=null) ? request.getParameter("sby") : "creation_date";
		String strSOrder = "";
		String strComFIdOrder = "asc";
		String strCTitelOrder = "asc";
		String strDateOrder = "asc";
		
		if(request.getParameter("sby")!=null)
		{
			if(request.getParameter("fidorder")!=null)
			{
				if(request.getParameter("fidorder").trim().equalsIgnoreCase("asc"))
				{
					strSOrder = "desc";
					strComFIdOrder = "desc";
				}
				else if (request.getParameter("fidorder").trim().equalsIgnoreCase("desc"))
				{
					strSOrder = "asc";
					strComFIdOrder = "asc";
				}
			}
			
			if(request.getParameter("ctorder")!=null)
			{
				if(request.getParameter("ctorder").trim().equalsIgnoreCase("asc"))
				{
					strSOrder = "desc";
					strCTitelOrder = "desc";
				}
				else if (request.getParameter("ctorder").trim().equalsIgnoreCase("desc"))
				{
					strSOrder = "asc";
					strCTitelOrder = "asc";
				}
			}
			if(request.getParameter("dateorder")!=null)
			{
				if(request.getParameter("dateorder").trim().equalsIgnoreCase("asc"))
				{
					strSOrder = "desc";
					strDateOrder = "desc";
				}
				else if (request.getParameter("dateorder").trim().equalsIgnoreCase("desc"))
				{
					strSOrder = "asc";
					strDateOrder = "asc";
				}
			}
			
			
		}
		String strFShortBy = strShortBy+" "+strSOrder;
		int minVal = (request.getParameter("numMin")!=null) ? Integer.parseInt(request.getParameter("numMin")) : 0;
		int maxVal = 10;
		////System.out.println("countVec.............InboxAction......minVal..... "+minVal);
		////System.out.println("countVec.............InboxAction......maxVal..... "+maxVal);
	
		
		
		Vector<String> paramVec1 = new Vector<String>();
		paramVec1.add(uId);
		paramVec1.add(FacilityID);
	//	paramVec1.add(adminFlag);
	//	paramVec1.add(pageid);
		
		
		Vector<String> paramVec = new Vector<String>();
		paramVec.add(String.valueOf(minVal));
		paramVec.add(String.valueOf(maxVal));		
		paramVec.add(strFShortBy);
		paramVec.add(uId);
		paramVec.add(FacilityID);
//		paramVec.add(adminFlag);
//		paramVec.add(pageid);
		
		int Cid = Integer.parseInt(FacilityID);
		int Uid = Integer.parseInt(uId);
		int aFid = Integer.parseInt(adminFlag);
		
		
		
		Vector comVec = new Vector();
		Vector comListVec = new Vector();
		String comList = "";
				
		int totalRow = 0;
		Vector<Vector> userVec = new Vector<Vector>();
		
		paramVec1.add(lowerSubTag);
		paramVec.add(lowerSubTag);

		paramVec1.add(month);
		paramVec1.add(nYear);
		
		paramVec.add(month);
		paramVec.add(nYear);
		//////System.out.println("paramVec1 in Action..........."+paramVec1);
		//System.out.println("paramVec in Action..........."+paramVec);
				totalRow = advtMaster.getNoticesCount(getDataSource(request, "corpo"), paramVec1);
				userVec= advtMaster.getNoticesList(getDataSource(request, "corpo"), paramVec);
	
				String strPageHtml = getPages(minVal, maxVal, totalRow,lowerSubTag,pageid,numCount);
		int regFlag=0;
		System.out.println("totalRow..........."+totalRow);
		System.out.println("result userVec......."+userVec);
		
		String strComplaintList = getComplaintList(strComFIdOrder, strCTitelOrder,strDateOrder, minVal, maxVal, totalRow, strPageHtml, userVec, pageid,lowerSubTag, regFlag, remander);
		//////System.out.println("Users "+strComplaintList);
		/**
	     * setContentType - text/html to write String on page.
	     * PrintWriter - This line use to get writer to write on page.
	     * out.println - use to write string. 
	     * 
	     */
		response.setContentType("text/html;charset=ISO-8859-1");
	    PrintWriter out = response.getWriter();
	    out.println(strComplaintList);
	    out.flush();
		
		// TODO Auto-generated method stub
		return null;
	}
	
	private String getComplaintList(String strComFIdOrder, String strCTitelOrder,String strDateOrder, int minVal, int maxVal, int totalRow, String strPageHtml, Vector userVec, String pageid,String lowerSubTag,int regFlag, int remander)
	{

		String strValue = "";
		strValue += "<div class=\"top_panel\">";
		strValue += "<div class=\"Page_Heading\">";	
		strValue += "<div class=\"Page_Heading_Text\" style=\"width: 70%;\">List of Notices</div>";
		if(totalRow != 0)
		{
		strValue += "<div style=\"float: left;\">";
		strValue += "<a style=\"font-size: 10px; font-weight: bold; color: rgb(0, 0, 0);\">Total matches Found: "+totalRow+"</a></div>";
		}
		strValue += "</div>";
			
		if(userVec.size()==0)
		{if(lowerSubTag.equalsIgnoreCase("2"))
		{
			strValue +="<div class=\"Fields_Row_2_head\">";
			strValue +="<div class=\"Fields_Col_1a\">No Notice Found.";
			strValue += "</div></div>";
		
		}else
		{
			strValue +="<div class=\"Fields_Row_2_head\">";
			strValue +="<div class=\"Fields_Col_1a\">No Notice Found.";
			strValue += "</div></div>";
		
		}
		}
		else
		{
			
			if (totalRow > maxVal)
			{

				strValue +="<div class=\"Fields_Col_1a\">Page Number  "+strPageHtml+"\"div>";
			}
	    
	    
	    String strLoginIdSymbol = (strComFIdOrder.trim().equalsIgnoreCase("asc")) ? "<img style=\"cursor:hand\" src=\"../images/downarrow.gif\" onClick=\"retrieveClistURL('brandsExistingComplaint.do?sby=log.first_name&lowerSubTag="+lowerSubTag+"&pageid="+pageid+"&numMin="+ minVal+"&fidorder="+strComFIdOrder+"');\">" : "<img style=\"cursor:hand\" src=\"../images/uparrow.gif\" onClick=\"retrieveClistURL('brandsExistingComplaint.do?sby=log.first_name&lowerSubTag="+lowerSubTag+"&pageid="+pageid+"&numMin="+ minVal+"&fidorder="+strComFIdOrder+"');\">";
	    String strUnameSymbol = (strCTitelOrder.trim().equalsIgnoreCase("asc")) ? "<img style=\"cursor:hand\" src=\"../images/downarrow.gif\" onClick=\"retrieveClistURL('brandsExistingComplaint.do?sby=com.complaint_title&lowerSubTag="+lowerSubTag+"&pageid="+pageid+"&numMin="+ minVal+"&ctorder="+strCTitelOrder+"');\">" : "<img style=\"cursor:hand\" src=\"../images/uparrow.gif\" onClick=\"retrieveClistURL('brandsExistingComplaint.do?sby=com.complaint_title&lowerSubTag="+lowerSubTag+"&pageid="+pageid+"&numMin="+ minVal+"&ctorder="+strCTitelOrder+"');\">";
	    String strDateSymbol = (strDateOrder.trim().equalsIgnoreCase("asc")) ? "<img style=\"cursor:hand\" src=\"../images/downarrow.gif\" onClick=\"retrieveClistURL('brandsExistingComplaint.do?sby=com.creation_date&lowerSubTag="+lowerSubTag+"&pageid="+pageid+"&numMin="+ minVal+"&dateorder="+strDateOrder+"');\">" : "<img style=\"cursor:hand\" src=\"../images/uparrow.gif\" onClick=\"retrieveClistURL('brandsExistingComplaint.do?sby=com.creation_date&lowerSubTag="+lowerSubTag+"&pageid="+pageid+"&numMin="+ minVal+"&dateorder="+strDateOrder+"');\">";
	   
	    strValue += "<div class=\"Fields_Container\">";	
		strValue += "<div class=\"Fields_Container_Inside\">";
		
	    for(int i=0; i<userVec.size(); i++)
		{
	    	int j = i+1;
	    	int numTotal = j%2;
	    	String strColor = (numTotal==0) ? "#FFFFFF" : "#FFFFFF";
	    	String strImg = (numTotal==0) ? "detail_white.gif" : "detail_white.gif";
		 Vector tempVec = (Vector)userVec.elementAt(i);
		 
		 int comId = Integer.parseInt(tempVec.elementAt(0).toString().trim());
		 
		 
		 String strNTitle = tempVec.elementAt(1).toString().trim();
		 String strNText = tempVec.elementAt(2).toString().trim();
	//	 String strCity = tempVec.elementAt(8).toString().trim();
		 
		 
//		 	for check length of Complaint text
		 String strText = "";  
		 String strFMsg = "";
		 
			String strMessage =  tempVec.elementAt(2).toString().trim();
			////////System.out.println("complaintMessage........."+strMessage.length());
			////////System.out.println("complaintMessage........."+strMessage);
			int numChar = (strMessage.length() > 200) ? 200 : strMessage.length();  
			for(int k=0; k<numChar; k++)
			{ 
				
					   strFMsg = strFMsg+strMessage.charAt(k);
			}
			if(strFMsg.lastIndexOf(strFMsg)!=-1)
			{
				 strText= strFMsg;
				//////System.out.println("...strFMsgTeam......"+strFMsg.lastIndexOf(strFMsg));
				
	         
	        }else{
	        	strText= strFMsg.substring(0, strFMsg.lastIndexOf(" "));
	        	//////System.out.println("...strText......");
	        }
	     String strDate[] = tempVec.elementAt(3).toString().trim().split("-");
	     strValue += "<div class=\"Fields_Row_2_head\">";
			strValue += "<div class=\"Row_2_Fields_head_2\" style=\"width: 65%;\">Subject: "+strNTitle+"</div>";
			strValue += "<div class=\"Row_2_Fields_head_2\" style=\"width: 25%;\">   Dated:"+strDate[2]+"-"+strDate[1]+"-"+strDate[0]+"</div>";
			strValue += "</div>";
		    			
			
	    	strValue += "<div class=\"Fields_Row_1\">";
			
	        strValue += "<div class=\"Row_2_Fields_Col_2\" style=\"width: 70%;\">"+strText+"</div>";						
			strValue += "</div>";
	 
		}
	        
	    if (totalRow > maxVal)
		{
        strValue += "<tr >";
		strValue += "<td colspan=\"7\" align=\"right\" >Page Number"+strPageHtml+"</td>";		
		strValue += "</tr>";
		}
	    strValue += "</div></div>";
		}	
		if(remander==0)
		{
			strValue += "<tr style=\"display:none\" align=\"center\">";
			strValue += "<td height=\"50\" colspan=\"5\"></td>";
			strValue += "</tr>";
		}
	    strValue += "</div>";	
	    
		return strValue;
	}
	
	private String getPages(int minVal, int maxVal, int numSize ,String lowerSubTag,String pageid ,String numCount)
	{
		String strResult ="<select name=\"paging\" onchange=\"retrieveClistURL('brandsExistingComplaint.do?lowerSubTag="+lowerSubTag+"&pageid="+pageid+"&numCount="+numCount+"&'+this.value);\">";
		int numMin = 0;
		int numPage = 1;
		for(int i=0; i<numSize; i=i+maxVal)
		{
			numMin = i;
			
			if(minVal == numMin)
			{
				strResult += "<option value=\"numMin=" + numMin+"\" Selected>Page" + numPage + "</option>";
			}
			else
			{
				strResult += "<option value=\"numMin=" + numMin+"\">Page" + numPage + "</option>";
			}
				numPage++;
		}
		strResult += "</select>";
		return strResult;
	}
}