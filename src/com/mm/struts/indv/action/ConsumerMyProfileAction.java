

/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.indv.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.mm.struts.indv.form.ConsumerMyProfileForm;

import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.StringTokenizer;
import java.util.Vector;
import com.mm.core.master.*;

import javax.sql.DataSource;
import java.util.*;

/** 
 * MyEclipse Struts
 * Creation date: 06-20-2007
 * 
 * XDoclet definition:
 * @struts.action path="/consumerMyProfile" name="ConsumerMyProfileForm" input="/form/consumerMyProfile.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="consumerMyProfile.jsp"
 */
public class ConsumerMyProfileAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws Exception 
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) throws Exception {
		ConsumerMyProfileForm consumerMyProfileForm = (ConsumerMyProfileForm) form;// TODO Auto-generated method stub
		
		    String result = "failure";
		    String lastmodifyDate = "";
		    String lastmodifyTime = "";
		    String mobile = "";
		    String birthDate = "";
			Vector <String> datavec = new Vector<String>();
			RootMaster rootMaster= new RootMaster();
			IndvMaster indvMaster = new IndvMaster();
			DataSource dataSource = getDataSource(request,"indv");
			
			HttpSession session = request.getSession();
			String uid = (String)session.getAttribute("uId");
			
			//get date of birth
			String date = consumerMyProfileForm.getUserDate();
			String month = consumerMyProfileForm.getUserMonth();
			String year = consumerMyProfileForm.getUserYear();
			if(date.length()>0 && month.length()>0 && year.length()>0)
				birthDate = year+"-"+month+"-"+date;
			
			java.util.Date dt = new java.util.Date();
			SimpleDateFormat sform = new SimpleDateFormat("yyyy-MM-dd, HH:mm:ss");
			String completeRemDate = sform.format(dt);
			StringTokenizer sttotal = new StringTokenizer(completeRemDate, ",");
			lastmodifyDate = sttotal.nextToken();
			lastmodifyTime = sttotal.nextToken();
			
			if(consumerMyProfileForm.getTxtMobile().trim().length()>0)
				mobile=consumerMyProfileForm.getTxtPrefix().trim()+"~"+consumerMyProfileForm.getTxtMobile().trim();
			String strTxtPrefix = "+0";
			if(consumerMyProfileForm.getTxtPrefix().length()>0)
			{
				strTxtPrefix = consumerMyProfileForm.getTxtPrefix();
			}
			String tempCountry[] = consumerMyProfileForm.getCountry().split("~");
			String userCountry=tempCountry[0];
			String userState = consumerMyProfileForm.getState();
			String userCity = consumerMyProfileForm.getCity();
			if(userCountry.equals("-1"))
			{
				//SET COUNTRY ,STATE ,CITY IN DATA BASE AND GENERATE ID FOR THAT AND ADD THESE IDS IN COMPANY MASTER TABLE.
				userCountry=rootMaster.insertCountry(dataSource,strTxtPrefix,consumerMyProfileForm.getOthercountry());//return country id
				userState=rootMaster.insertState(dataSource,consumerMyProfileForm.getOtherstate(),userCountry);
				userCity=rootMaster.insertCity(dataSource,consumerMyProfileForm.getOthercity(),userState,userCountry);
			}
			else if(userState.equals("-1"))
			{
				//set state .city in data base and add these field in company master table
				userState=rootMaster.insertState(dataSource,consumerMyProfileForm.getOtherstate(),userCountry);
				userCity=rootMaster.insertCity(dataSource,consumerMyProfileForm.getOthercity(),userState,userCountry);
			}
			else if(userCity.equals("-1"))
			{
				//set sity in data base and add that is in company master.
				userCity=rootMaster.insertCity(dataSource,consumerMyProfileForm.getOthercity(),userState,userCountry);
			}
			else
			{
				//nothing 
			}
			
			//set data Vector for modify user Information
			datavec.add(uid);											//0 userId
			datavec.add(consumerMyProfileForm.getUserfname());			//1 first Name
			datavec.add(consumerMyProfileForm.getUserlname());			//2 last name
			datavec.add(consumerMyProfileForm.getUseremail());  		//3 email
			datavec.add("");											//4 phone
			datavec.add(mobile);										//5 mobile 
			datavec.add(consumerMyProfileForm.getUseradd()); 			//6 address
			datavec.add(userCountry);									//7 country
			datavec.add(userState);										//8 state
			datavec.add(userCity);										//9 city
			datavec.add(consumerMyProfileForm.getUserpincode());		//10 pincode
			datavec.add(lastmodifyDate);								//11 last modify date
			datavec.add(lastmodifyTime);								//12 last modify time		
			datavec.add(consumerMyProfileForm.getAboutuscombo());		//13 About Us
			datavec.add(consumerMyProfileForm.getAnnualincomecombo());	//14 Annual Income
			datavec.add(birthDate);										//15 Birth Date
			datavec.add(consumerMyProfileForm.getEducationCombo());		//16 Education
			datavec.add(consumerMyProfileForm.getMaritalcombo());		//17 Marital Status
			datavec.add(consumerMyProfileForm.getProfessioncombo());	//18 Proffession
			datavec.add(consumerMyProfileForm.getGender());				//19 Gender
					
			result = indvMaster.updateUserInfo(dataSource,datavec);
			if(result.equalsIgnoreCase("success"))
			{
				ActionErrors errors = new ActionErrors();
				errors.add("modify", new ActionError("errors.user.modifySuucess"));
				if(!errors.isEmpty())
				{
					saveErrors(request, errors);
				}
			}
			else
			{
				ActionErrors errors = new ActionErrors();
				errors.add("modify", new ActionError("errors.user.modifyFailure"));
				if(!errors.isEmpty())
				{
					saveErrors(request, errors);
				}
			}
			
			return mapping.findForward(result);
	
		}

	



}
