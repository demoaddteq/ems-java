/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.advt.action;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionError;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.mm.struts.advt.form.UsercreationForm;

import java.text.SimpleDateFormat;
import java.util.StringTokenizer;
import java.util.Vector;
import com.mm.core.master.*;
import com.mm.core.resource.Constant;
import com.mm.core.resource.MailText;
import com.mm.core.resource.Resource;

import javax.sql.DataSource;



/** 
 * MyEclipse Struts
 * Creation date: 20-06-2007
 * 
 * XDoclet definition:
 * @struts.action path="/Usercreation" name="UsercreationForm" input="/Usercreation.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/Usercreation.jsp"
 * @struts.action-forward name="failure" path="/Usercreation.jsp"
 */


public class UsercreationAction extends Action
{
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) {
		UsercreationForm usercreationForm = (UsercreationForm) form;// TODO Auto-generated method stub
		
		    String result = null;
		    ////System.out.println("UsercreationForm companyid................" );
		    HttpSession session =request.getSession();
			String userid=(String)session.getAttribute("uId");
			String companyid=(String)session.getAttribute("compId");
			////System.out.println("UsercreationForm userid................" +userid);
			////System.out.println("UsercreationForm companyid................" +companyid);
			
			DataSource dataSource = getDataSource(request,"advt");
			RootMaster rootMaster = new RootMaster();
			
			String creationDate ="";		
			String creationTime = "";
			java.util.Date dt = new java.util.Date();
			SimpleDateFormat sform = new SimpleDateFormat("yyyy-MM-dd, HH:mm:ss,a");
			String completeRemDate = sform.format(dt);
			StringTokenizer sttotal = new StringTokenizer(completeRemDate, ",");
		    creationDate = sttotal.nextToken();
		    creationTime = sttotal.nextToken();
			
			
			String strVerifyResult=rootMaster.checkLoginId(dataSource,usercreationForm.getLoginName(),usercreationForm.getEmail());
			if(strVerifyResult.equals("loginId"))
			{
				ActionErrors errors = new ActionErrors();
				errors.add("duplicate", new ActionError("errors.user.duplicate"));
				if(!errors.isEmpty())
				{
					saveErrors(request, errors);
				}
				return mapping.findForward("failure");
				
			}
			
			//end user check
			
		 	
			////System.out.println("UsercreationForm companyid................" +companyid);
			Vector<String>userVec= new Vector<String>();
			String tempuserCountry[] = usercreationForm.getCountry().split("~");
			String userCountry=tempuserCountry[0];
			String userState = usercreationForm.getState();
			String userCity = usercreationForm.getCity();
			String depart = usercreationForm.getDepartment();
			String desig = usercreationForm.getDesignation();
			String type="college";
			if(userCountry.equals("-1"))
			{
				//SET COUNTRY ,STATE ,CITY IN DATA BASE AND GENERATE ID FOR THAT AND ADD THESE IDS IN COMPANY MASTER TABLE.
				userCountry=rootMaster.insertCountry(dataSource,usercreationForm.getTxtPPrefix(),usercreationForm.getOthercountry().toString().trim());//return country id
				userState=rootMaster.insertState(dataSource,usercreationForm.getOtherstate().toString().trim(),userCountry);
				userCity=rootMaster.insertCity(dataSource,usercreationForm.getOthercity().toString().trim(),userState,userCountry);
			}
			else if(userState.equals("-1"))
			{
				//set state .city in data base and add these field in company master table
				userState=rootMaster.insertState(dataSource,usercreationForm.getOtherstate().toString().trim(),userCountry);
				userCity=rootMaster.insertCity(dataSource,usercreationForm.getOthercity().toString().trim(),userState,userCountry);
			}
			else if(userCity.equals("-1"))
			{
				//set city in data base and add that is in company master.
				userCity=rootMaster.insertCity(dataSource,usercreationForm.getOthercity().toString().trim(),userState,userCountry);
			}
			else
			{
				//nothing 
			}
			String userphoneNo ="";
			if(usercreationForm.getTxtAreacode().length()>0 || usercreationForm.getTxtPhone().length()>0)
			{
				userphoneNo=usercreationForm.getTxtPPrefix()+"~"+usercreationForm.getTxtAreacode()+"~"+usercreationForm.getTxtPhone();
			}
			
			String userMobile = usercreationForm.getTxtPrefix()+"~"+usercreationForm.getTxtMobile();
			if(depart.equals("-1"))
			{
				//SET COUNTRY ,STATE ,CITY IN DATA BASE AND GENERATE ID FOR THAT AND ADD THESE IDS IN COMPANY MASTER TABLE.
				depart=rootMaster.insertDepartment(dataSource,usercreationForm.getOtherdepartment().toString().trim(),type);//return country id
				desig=rootMaster.insertDesignation(dataSource,usercreationForm.getOtherdesignation().toString().trim(),type,depart);
				
			}
			else if(desig.equals("-1"))
			{
				//set state .city in data base and add these field in company master table
				desig=rootMaster.insertDesignation(dataSource,usercreationForm.getOtherdesignation().toString().trim(),type,depart);
			}
			
			/**
			userVec.add(usercreationForm.getAllrights());
			userVec.add(usercreationForm.getUserdetails());
			userVec.add(usercreationForm.getUsercreation());
			userVec.add(usercreationForm.getUsermodification());
			userVec.add(usercreationForm.getCompanyprofilemodify());
			userVec.add(usercreationForm.getChangepassword());
			userVec.add(usercreationForm.getUserdeletion());
			*/
			String strMentor = usercreationForm.getMcata()+","+usercreationForm.getMcatb()+","+usercreationForm.getMcatc()+","+usercreationForm.getMcatd();
			
			String strQuet = usercreationForm.getTecquer()+","+usercreationForm.getPerquer();
			
						
			//System.out.println("strMentor................" +strMentor);
			//System.out.println("strQuet................" +strQuet);
			
			
			userVec.add(companyid);
			userVec.add(usercreationForm.getRdbgroup());
			userVec.add(usercreationForm.getLoginName());			
			userVec.add(usercreationForm.getPassword());
			userVec.add(usercreationForm.getFname());			
			userVec.add(usercreationForm.getLname());
			userVec.add(usercreationForm.getEmail());
			userVec.add(userphoneNo);
			userVec.add(userMobile);
			userVec.add(usercreationForm.getAddress());			
			userVec.add(userCountry);
			userVec.add(userState);
			userVec.add(userCity);			
			userVec.add(usercreationForm.getZip());
			userVec.add("nophoto.jpg");
			userVec.add("IN");
			userVec.add(creationDate);
			userVec.add(creationTime);
			userVec.add("0000-00-00");
			userVec.add("00:00:00");
			userVec.add("0");
			userVec.add("20");
			userVec.add("0");
			userVec.add("0");
			userVec.add("0");
			userVec.add("0");
			userVec.add("0");
			userVec.add("0");
			userVec.add("0");
			userVec.add("0");
			userVec.add("0");
			userVec.add("0");
			userVec.add("Male");
			userVec.add("Advertiser");
			userVec.add("0");
			userVec.add("N/A");
			userVec.add("N/A");
			userVec.add("N/A");
			userVec.add(strMentor);
			userVec.add(strQuet);
			userVec.add(depart);
			userVec.add(desig);
			
			result=rootMaster.insertUserInfoCorpo(dataSource,userVec);
			
			
			
			//mail transfer code here.
			Resource resr = new Resource();
			MailText mt = new MailText();
			String strMailText = "";
			if(result.equalsIgnoreCase("success"))
			{
				strMailText = mt.getETextForCollegeUserReg(usercreationForm.getLoginName(), usercreationForm.getPassword(), usercreationForm.getFname(), usercreationForm.getLname());
			
				//System.out.println("strMailText ...."+strMailText);
				//System.out.println("Email..."+usercreationForm.getEmail().trim());
				
			String strEmailStatus = resr.sendMail(strMailText, Constant.Email_Sender, usercreationForm.getEmail().trim(), Constant.Email_Title_For_UCreation);
			//System.out.println("str Email Status in college user....."+strEmailStatus);
			
			
			}
			
			
			if(result.equalsIgnoreCase("success"))
			{
				AdvtMaster am = new AdvtMaster();
				int numUserId = am.getCreatedUserId(dataSource, userVec);
				Vector<String> usrCatVec = new Vector<String>();
				usrCatVec.add(companyid);
				usrCatVec.add(String.valueOf(numUserId));
				usrCatVec.add(usercreationForm.getCmbcat());
				usrCatVec.add(usercreationForm.getChkGroup1());
				usrCatVec.add(usercreationForm.getChkGroup2());
				usrCatVec.add(usercreationForm.getChkGroup3());
				usrCatVec.add(usercreationForm.getChkGroup4());
				usrCatVec.add(usercreationForm.getChkGroup5());
				usrCatVec.add(usercreationForm.getChkGroup6());
				usrCatVec.add(usercreationForm.getChkGroup7());
				usrCatVec.add(usercreationForm.getChkGroup8());
				usrCatVec.add(usercreationForm.getChkGroup9());
				usrCatVec.add(usercreationForm.getChkGroup10());
				//////System.out.println("User Category Vec "+usrCatVec);
				result= am.setUserCategory(dataSource, usrCatVec);
				//////System.out.println("Result "+result);
			}
			
			
			
			
			return mapping.findForward(result);
	}
}

