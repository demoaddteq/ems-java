
/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.student.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.mm.struts.student.form.WriteBlogForm;
import com.mm.core.master.*;
import javax.sql.DataSource;
import java.util.Vector;




/** 
 * MyEclipse Struts
 * Creation date: 06-11-2007
 * 
 * XDoclet definition:
 * @struts.action path="/writeComplaint" name="writeRequestForm" input="/form/writeComplaint.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="writeComplaint.jsp"
 */
public class WriteBlogAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,HttpServletRequest request, HttpServletResponse response) {
		
		WriteBlogForm writeBlogForm = (WriteBlogForm) form;// TODO Auto-generated method stub
	RootMaster rootMaster = new RootMaster();
	
	IndvMaster IndvMasters = new IndvMaster();
	
	
	Vector <String> dataVec = new Vector<String>();
	//set all form data in a vector and transfer this vector to the complaint preview page.
	//and set status success for that action.
	DataSource dataSource = getDataSource(request, "student");
	String qtype=writeBlogForm.getQtype().toString().trim();
	String cat=writeBlogForm.getBlogCategory().toString().trim();
	System.out.println("Blog Category is "+cat);
	String result = "failure";
	if(qtype.equalsIgnoreCase("blog"))
	{
		result="blogfailure";
	}
	
	String Category_name = IndvMasters.findcategory(dataSource,cat);
	System.out.print("Catrgory Name is "+Category_name);
	request.setAttribute("categoryName",Category_name);

	dataVec.add(writeBlogForm.getBlogTitle().toString().trim());
	dataVec.add(writeBlogForm.getBlogtext().toString().trim());
	dataVec.add(writeBlogForm.getQtype().toString().trim());
	//dataVec.add(writeBlogForm.getCons().toString().trim());
	//dataVec.add(writeBlogForm.getStudent().toString().trim());
	dataVec.add("0");
	dataVec.add("26");	
	dataVec.add(writeBlogForm.getBlogCategory().toString().trim());
	
	System.out.println("datavac in write action"+dataVec.size());
	System.out.println("datavac actual "+dataVec);
	System.out.println("Checkpoint 11");
	Vector<String> dataUnnamedVec = new Vector<String>();
	//field1
	
	Vector<String> unnamedNameVec= new Vector<String>();
	request.setAttribute("UnnamedNameData",unnamedNameVec);
	//request.setAttribute("complaintUnnamedData",dataUnnamedVec);
	request.setAttribute("complaintData",dataVec);
	if(request.getAttribute("complaintData")!=null)
	{
		result = "success";
	}
	return mapping.findForward(result);
	
}
}