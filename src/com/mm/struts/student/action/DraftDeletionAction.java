/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.mm.struts.student.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionError;
import com.mm.core.master.IndvMaster;
import java.util.Vector;
import com.mm.struts.student.form.DraftDeletionForm;

/** 
 * MyEclipse Struts
 * Creation date: 07-19-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class DraftDeletionAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		HttpSession session = request.getSession();
				
		String uId =(String)session.getAttribute("uId");
		String compId =(String)session.getAttribute("compId");
		Vector allRights =(Vector)session.getAttribute("allRights");
		String adminFlag = allRights.elementAt(18).toString();
		
		
		IndvMaster indvMaster = new IndvMaster();
		String status = "failure";
		DraftDeletionForm draftDeletionForm = (DraftDeletionForm)form;
		String[] draftIds = draftDeletionForm.getBlogids();
		String drafts = "";
		for(int i=0; i<draftIds.length; i++)
		{
			////////System.out.println("manoj in action "+i+">>>>>"+draftIds[i]);
			if(i!=(draftIds.length-1))
				drafts = drafts+draftIds[i]+",";
			else
			{
				drafts = drafts+draftIds[i];
			}
		}
		Vector<String> paramVec = new Vector<String>();
		String result = "failure";
		////////System.out.println("drafts>>>>>>>>>>>"+drafts);
		if(drafts.length()>0)
		{
			paramVec.add(drafts);
			result = indvMaster.deleteDraft(getDataSource(request, "student"), paramVec);
		}
		
		if(result.equalsIgnoreCase("success"))
		{
			for(int i=0; i<draftIds.length; i++)
			{
				String strTempResult = indvMaster.deleteDraftUnnamed(getDataSource(request, "student"), Integer.parseInt(draftIds[i].trim()));
				if(strTempResult.equalsIgnoreCase("success")){}
			}
			ActionErrors msg = new ActionErrors();
			msg.clear();
			msg.add("delete", new ActionError("indv.draft.DeleteSuccess"));
			
				saveErrors(request, msg);
			
			
			status="success";
		}
		else
		{
			ActionErrors msg = new ActionErrors();
			msg.clear();
			msg.add("delete", new ActionError("indv.draft.DeleteFailure"));
			
			saveErrors(request, msg);
			
			status ="failure";
		}
		
		Vector dataVec = new Vector();		
		dataVec.add(uId);
		dataVec.add(compId);		
			
		Vector countVec = indvMaster.complaintCount(getDataSource(request, "student"), dataVec);		
		session.setAttribute("countVec", countVec);						
		//////System.out.println("countVec.............InboxDeletionAction........... "+countVec);
		
		return mapping.findForward(status);
	}
}